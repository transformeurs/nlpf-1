name: Build and Deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-backend:
    name: Build and Deploy Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/docker/Dockerfile
          push: true
          tags: ghcr.io/transformeurs/nlpf-1/backend:${{ github.sha }}

      - name: Deploy on production VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull ghcr.io/transformeurs/nlpf-1/backend:${{ github.sha }}
            (docker stop nlpf-backend && docker rm nlpf-backend) || echo "Nothing to stop"
            docker run -d \
              --name nlpf-backend \
              -p 8080:8080 \
              --network postgres_default \
              --env AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
              --env AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
              --env AWS_S3_ENDPOINT="${{ secrets.AWS_S3_ENDPOINT }}" \
              --env DATABASE_URL="${{ secrets.DATABASE_URL }}" \
              --env JWT_SECRET="${{ secrets.JWT_SECRET }}" \
              ghcr.io/transformeurs/nlpf-1/backend:${{ github.sha }}
